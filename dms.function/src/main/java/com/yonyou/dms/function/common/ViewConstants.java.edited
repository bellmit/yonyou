
/** 
*Copyright 2016 Yonyou Corporation Ltd. All Rights Reserved.

* This software is published under the terms of the Yonyou Software
* License version 1.0, a copy of which has been included with this
* distribution in the LICENSE.txt file.
*
* @Project Name : dms.function
*
* @File name : ViewConstants.java
*
* @Author : Administrator
*
* @Date : 2016年12月15日
*
----------------------------------------------------------------------------------
*     Date       Who       Version     Comments
* 1. 2016年12月15日    Administrator    1.0
*
*
*
*
----------------------------------------------------------------------------------
*/

package com.yonyou.dms.function.common;

/**
 * TODO description
 * 
 * @author Administrator
 * @date 2016年12月15日
 */

public class ViewConstants {

	static String getVmBrand() {
		StringBuffer VmBrand = new StringBuffer();
		VmBrand.append("SELECT B.CHILD_ENTITY AS DEALER_CODE,A.BRAND_CODE, A.BRAND_NAME,");
		VmBrand.append("A.OEM_TAG, A.IS_VALID, A.CREATED_BY, A.CREATED_AT, A.UPDATED_BY, A.UPDATED_AT,");
		VmBrand.append(
				"A.VER FROM TM_BRAND A INNER JOIN TM_ENTITY_RELATIONSHIP B    ON   A.DEALER_CODE = B.PARENT_ENTITY");
		VmBrand.append(" AND B.BIZ_CODE = 'TM_BRAND'");
		return VmBrand.toString();
	}

	static String getVmColor() {
		StringBuffer VmColor = new StringBuffer();
		VmColor.append(
				"SELECT  B.CHILD_ENTITY AS DEALER_CODE, A.COLOR_CODE, A.COLOR_NAME, A.OEM_TAG, A.DOWN_TIMESTAMP,");
		VmColor.append(
				" A.CREATED_BY, A.CREATED_AT, A.UPDATED_BY, A.UPDATED_AT FROM  TM_COLOR A LEFT JOIN TM_ENTITY_RELATIONSHIP B");
		VmColor.append(" ON A.DEALER_CODE = B.PARENT_ENTITY AND BIZ_CODE = 'TM_COLOR' ");
		return VmColor.toString();
	}

	static String getVmModel() {
		StringBuffer VmModel = new StringBuffer();
		VmModel.append(
				"SELECT  B.CHILD_ENTITY AS DEALER_CODE,  A.BRAND_CODE,  A.SERIES_CODE,   A.MODEL_CODE,  A.MODEL_NAME,");
		VmModel.append(
				"   A.MODEL_LABOUR_CODE,  A.BALANCE_MODE_CODE,  A.LABOUR_PRICE,  A.LOCAL_MODEL_CODE,  A.DOWN_STAMP,  A.OEM_TAG,");
		VmModel.append("    A.IS_VALID ,  A.MODEL_GROUP_NAME,  A.MODEL_GROUP_CODE,");
		VmModel.append(" A.CREATED_BY, A.CREATED_AT, A.UPDATED_BY, A.UPDATED_AT FROM    TM_MODEL A ");
		VmModel.append(
				" INNER JOIN TM_ENTITY_RELATIONSHIP B ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TM_MODEL' ");
		return VmModel.toString();
	}

	static String getVmSeries() {
		StringBuffer VmSeries = new StringBuffer();
		VmSeries.append("SELECT  B.CHILD_ENTITY AS DEALER_CODE,   A.BRAND_CODE,");
		VmSeries.append(" A.SERIES_CODE  , A.SERIES_NAME,   A.OEM_TAG,");
		VmSeries.append(" A.CREATED_BY, A.CREATED_AT, A.UPDATED_BY, A.UPDATED_AT FROM    TM_SERIES A ");
		VmSeries.append(
				" INNER JOIN TM_ENTITY_RELATIONSHIP B ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TM_SERIES' ");
		return VmSeries.toString();
	}

	static String getVmCofiguration() {
		StringBuffer VmCofiguration = new StringBuffer();
		VmCofiguration.append("SELECT  B.CHILD_ENTITY AS DEALER_CODE,    A.BRAND_CODE,");
		VmCofiguration.append("  A.SERIES_CODE,   A.MODEL_CODE,   A.CONFIG_CODE,   A.CONFIG_NAME,");
		VmCofiguration.append(" A.CREATED_BY, A.CREATED_AT, A.UPDATED_BY, A.UPDATED_AT FROM    TM_CONFIGURATION A ");
		VmCofiguration.append(
				" INNER JOIN TM_ENTITY_RELATIONSHIP B ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TM_CONFIGURATION' ");
		return VmCofiguration.toString();
	}

	static String getVmInsuranceType() {
		StringBuffer VmInsuranceType = new StringBuffer("SELECT  B.CHILD_ENTITY AS DEALER_CODE,");
		VmInsuranceType
				.append(" A.INSURANCE_TYPE_CODE,A.INSURANCE_TYPE_NAME,A.INSURANCE_M_T_CODE,A.INSURANCE_M_T_NAME,");
		VmInsuranceType.append("  A.IS_COM_INSURANCE,    A.INSURANCE_TYPE_STATUS,");
		VmInsuranceType.append(" A.CREATED_BY, A.CREATED_AT, A.UPDATED_BY, A.UPDATED_AT FROM  TM_INSURANCE_TYPE A ");
		VmInsuranceType.append(
				" INNER JOIN TM_ENTITY_RELATIONSHIP B ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TM_INSURANCE_TYPE' ");
		return VmInsuranceType.toString();
	}

	static String getVmDefeatReason() {
		StringBuffer VmDefeatReason = new StringBuffer("SELECT  B.CHILD_ENTITY AS DEALER_CODE,");
		VmDefeatReason.append(" A.DR_CODE, A.DR_DESC,  A.DEFEAT_REASON_TYPE, A.OEM_TAG, A.DOWN_TIMESTAMP,");
		VmDefeatReason.append(" A.CREATED_BY, A.CREATED_AT, A.UPDATED_BY, A.UPDATED_AT FROM  TM_DEFEAT_REASON A ");
		VmDefeatReason.append(
				" INNER JOIN TM_ENTITY_RELATIONSHIP B ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TM_DEFEAT_REASON' ");
		return VmDefeatReason.toString();
	}

	static String getVmEntityShareWith() {
		StringBuffer VmEntityShareWith = new StringBuffer();
		VmEntityShareWith.append(
				"SELECT A.CHILD_ENTITY AS DEALER_CODE,  B.CHILD_ENTITY AS SHARE_ENTITY,  A.BIZ_CODE,A.RELATIONSHIP_MODE");
		VmEntityShareWith.append(
				" FROM TM_ENTITY_RELATIONSHIP A LEFT JOIN TM_ENTITY_RELATIONSHIP B ON  A.PARENT_ENTITY = B.PARENT_ENTITY AND A.BIZ_CODE = B.BIZ_CODE");
		VmEntityShareWith.append(" WHERE A.RELATIONSHIP_MODE = 'BROTHER_MODE' ");
		VmEntityShareWith
				.append(" UNION SELECT A.PARENT_ENTITY AS DEALER_CODE,  A.CHILD_ENTITY  AS SHARE_ENTITY,  A.BIZ_CODE,");
		VmEntityShareWith.append(
				"   A.RELATIONSHIP_MODE FROM TM_ENTITY_RELATIONSHIP A WHERE  A.RELATIONSHIP_MODE = 'CHILD_MODE' ");
		return VmEntityShareWith.toString();
	}

	static String getVmOtherCost() {
		StringBuffer VmOtherCost = new StringBuffer("SELECT  B.CHILD_ENTITY AS DEALER_CODE,");
		VmOtherCost.append("  A.OTHER_COST_CODE,  A.OTHER_COST_NAME,");
		VmOtherCost.append(" A.CREATED_BY, A.CREATED_AT, A.UPDATED_BY, A.UPDATED_AT FROM  TM_OTHER_COST A ");
		VmOtherCost.append(
				" INNER JOIN TM_ENTITY_RELATIONSHIP B ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TM_OTHER_COST' ");
		return VmOtherCost.toString();
	}

	static String getVmUpholsterCombo() {
		StringBuffer VmUpholsterCombo = new StringBuffer("SELECT  B.CHILD_ENTITY AS DEALER_CODE,");
		VmUpholsterCombo.append(
				" A.COMBO_CODE, A.COMBO_NAME, A.COMBO_TYPE,A.PRODUCT_CODE,A.BRAND_CODE,A.SERIES_CODE, A.MODEL_CODE,");
		VmUpholsterCombo.append(" A.COMBO_AMOUNT, A.GARNITURE_SUM, A.UPHOLSTER_SUM, A.SERVICE_SUM, A.BEGIN_DATE,");
		VmUpholsterCombo.append(" A.END_DATE, A.RELEASE_DATE, A.RELEASE_TAG, A.IS_VALID,A.DOWN_TIMESTAMP,");
		VmUpholsterCombo.append(" A.CREATED_BY, A.CREATED_AT, A.UPDATED_BY, A.UPDATED_AT FROM  TM_UPHOLSTER_COMBO A ");
		VmUpholsterCombo.append(
				" INNER JOIN TM_ENTITY_RELATIONSHIP B ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TM_UPHOLSTER_COMBO' ");
		return VmUpholsterCombo.toString();
	}

	static String getVmTrackingTask() {
		StringBuffer VmTrackingTask = new StringBuffer("SELECT  B.CHILD_ENTITY AS DEALER_CODE,");
		VmTrackingTask
				.append("  A.TASK_ID,  A.CUSTOMER_STATUS, A.INTENT_LEVEL, A.TASK_NAME, A.EXECUTE_TYPE,A.TASK_CONTENT,");
		VmTrackingTask.append("  A.INTERVAL_DAYS,  A.KEEP_DAYS, A.TASK_TYPE, A.CONTACTOR_TYPE,A.HAS_EXECUTE,");
		VmTrackingTask.append("  A.CR_EXECUTE_DATE, A.IS_VALID, A.BIG_CUSTOMER_INTERVAL_DAYS,");
		VmTrackingTask.append(" A.CREATED_BY, A.CREATED_AT, A.UPDATED_BY, A.UPDATED_AT FROM  TM_TRACKING_TASK A ");
		VmTrackingTask.append(
				" INNER JOIN TM_ENTITY_RELATIONSHIP B ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TM_TRACKING_TASK' ");
		return VmTrackingTask.toString();
	}

	static String getVtAnswer() {
		StringBuffer VtAnswer = new StringBuffer("SELECT  B.CHILD_ENTITY AS DEALER_CODE,");
		VtAnswer.append("  A.ANSWER_NO, A.ANSWER_GROUP_NO,A.ANSWER, A.ANSWER_DESC,");
		VtAnswer.append("   A.DOWN_TIMESTAMP,A.IS_VALID,  A.DOWN_TAG, A.FROM_ENTITY,");
		VtAnswer.append(" A.CREATED_BY, A.CREATED_AT, A.UPDATED_BY, A.UPDATED_AT FROM  TT_ANSWER A ");
		VtAnswer.append(
				" INNER JOIN TM_ENTITY_RELATIONSHIP B ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TT_ANSWER' ");
		return VtAnswer.toString();
	}

	static String getVtAnswerGroup() {
		StringBuffer VtAnswerGroup = new StringBuffer("SELECT  B.CHILD_ENTITY AS DEALER_CODE,");
		VtAnswerGroup.append("  A.ANSWER_GROUP_NO, A.ANSWER_GROUP_NAME, A.ANSWER_GROUP_DESC,A.FROM_ENTITY,");
		VtAnswerGroup.append(" A.DOWN_TAG, A.DOWN_TIMESTAMP, A.IS_VALID,");
		VtAnswerGroup.append(" A.CREATED_BY, A.CREATED_AT, A.UPDATED_BY, A.UPDATED_AT FROM  TT_ANSWER_GROUP A ");
		VtAnswerGroup.append(
				" INNER JOIN TM_ENTITY_RELATIONSHIP B ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TT_ANSWER_GROUP' ");
		return VtAnswerGroup.toString();
	}

	static String getVtTraceQuestion() {
		StringBuffer VtTraceQuestion = new StringBuffer("SELECT  B.CHILD_ENTITY AS DEALER_CODE,");
		VtTraceQuestion.append(
				" A.QUESTION_CODE, A.ANSWER_GROUP_NO, A.QUESTION_NAME,  A.QUESTION_CONTENT, A.QUESTION_DESC, A.QUESTION_TYPE,");
		VtTraceQuestion.append(
				" A.IS_MUST_FILLED,  A.IS_STAT_REPORT, A.IS_VALID, A.DOWN_TIMESTAMP, A.DOWN_TAG, A.FROM_ENTITY,");
		VtTraceQuestion.append(" A.CREATED_BY, A.CREATED_AT, A.UPDATED_BY, A.UPDATED_AT FROM  TT_TRACE_QUESTION A ");
		VtTraceQuestion.append(
				" INNER JOIN TM_ENTITY_RELATIONSHIP B ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TT_TRACE_QUESTION' ");
		return VtTraceQuestion.toString();
	}

	static String getVtQuestionRelation() {
		StringBuffer VtQuestionRelation = new StringBuffer("SELECT  B.CHILD_ENTITY AS DEALER_CODE,");
		VtQuestionRelation.append(
				"  A.QUESTIONNAIRE_CODE,  A.QUESTION_CODE,   A.FROM_ENTITY,A.DOWN_TAG,A.DOWN_TIMESTAMP,A.SORT_NUM,");
		VtQuestionRelation
				.append(" A.CREATED_BY, A.CREATED_AT, A.UPDATED_BY, A.UPDATED_AT FROM  TT_QUESTION_RELATION A ");
		VtQuestionRelation.append(
				" INNER JOIN TM_ENTITY_RELATIONSHIP B ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TT_QUESTION_RELATION' ");
		return VtQuestionRelation.toString();
	}

	static String getVtTraceQuestionnaire() {
		StringBuffer VtTraceQuestionnaire = new StringBuffer("SELECT  B.CHILD_ENTITY AS DEALER_CODE,");
		VtTraceQuestionnaire.append(
				"  a.QUESTIONNAIRE_CODE,  a.QUESTIONNAIRE_NAME, a.QUESTIONNAIRE_TYPE, a.ACTIVITY_CODE,a.IS_SERVICE_QUESTIONNAIRE,");
		VtTraceQuestionnaire.append(
				"  a.IS_VALID, a.FROM_ENTITY,a.DOWN_TAG, a.DOWN_TIMESTAMP,a.IS_LOSS_VEHICLE_QUESTIONNAIRE, a.TEST_DRIVE_TYPE,a.SERIES_CODE,");
		VtTraceQuestionnaire
				.append(" A.CREATED_BY, A.CREATED_AT, A.UPDATED_BY, A.UPDATED_AT FROM  TT_TRACE_QUESTIONNAIRE A ");
		VtTraceQuestionnaire.append(
				" INNER JOIN TM_ENTITY_RELATIONSHIP B ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TT_TRACE_QUESTIONNAIRE' ");
		return VtTraceQuestionnaire.toString();
	}

	static String getVmVsProduct() {
		StringBuffer VmVsProduct = new StringBuffer("SELECT  B.CHILD_ENTITY AS DEALER_CODE,A.D_KEY ,");
		VmVsProduct.append(
				"A.PRODUCT_CODE, A.PRODUCT_NAME ,A.BRAND_CODE ,A.SERIES_CODE ,A.MODEL_CODE ,A.CONFIG_CODE ,A.COLOR_CODE ,A.PRODUCT_STATUS ,");
		VmVsProduct.append(
				"  A.PRODUCT_TYPE ,A.OEM_DIRECTIVE_PRICE ,A.DIRECTIVE_PRICE ,A.LATEST_PURCHASE_PRICE ,A.ENTER_DATE ,A.EXEUNT_DATE ,A.WHOLESALE_DIRECTIVE_PRICE ,");
		VmVsProduct.append(
				" A.MANAGER_PRICE , A.GENERAL_MANAGER_PRICE , A.OEM_TAG ,A.IS_VALID , A.DOWN_STAMP ,A.REMARK , A.MININUM_PRICE ,A.SALES_CONSULTANT_PRICE ,");
		VmVsProduct.append(
				" A.SEC_SALES_CONSULTANT_PRICE ,A.SEC_MANAGER_PRICE ,A.SEC_GENERAL_MANAGER_PRICE ,A.DISCOUNT_RATE , A.OWNED_BY ,");
		VmVsProduct.append(" A.EXHAUST_QUANTITY,A.OIL_TYPE,A.YEAR_MODEL, A.IS_MUST_PDI,");
		VmVsProduct.append(" A.CREATED_BY, A.CREATED_AT, A.UPDATED_BY, A.UPDATED_AT FROM  TM_VS_PRODUCT A ");
		VmVsProduct.append(
				" INNER JOIN TM_ENTITY_RELATIONSHIP B ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TM_VS_PRODUCT' ");
		return VmVsProduct.toString();
	}

	static String getVmFunctionModules() {
		StringBuffer VmFunctionModules = new StringBuffer(
				"SELECT ITEM_CODE, ITEM_DESC,DEFAULT_VALUE,DEALER_CODE, CREATED_BY, CREATED_AT, UPDATED_BY, UPDATED_AT ");
		VmFunctionModules.append(
				"FROM tm_default_para WHERE ITEM_CODE IN ('1210','1211','1212', '1213','1214','1215','1216','1217', '1218','1219','1230','1231','1232', '1233','1234','1235','1236','1237', '8801','2201','1223','1255','1256','1257','1258','1180','1801','1239')");
		return VmFunctionModules.toString();
	}

	static String getVmVehicle() {
		StringBuffer VmFunctionModules = new StringBuffer();
		VmFunctionModules.append(
				"SELECT A.VIN ,B.CHILD_ENTITY AS DEALER_CODE , A.OWNER_NO ,A.CUSTOMER_NO ,A.OWNER_NO_OLD , A.LICENSE ,A.ENGINE_NO ,A.GEAR_BOX ,A.INNER_COLOR , A.BRAND , A.SERIES , ");
		VmFunctionModules.append(
				"A.MODEL , A.COLOR ,A.APACKAGE , A.MODEL_YEAR ,A.EXHAUST_QUANTITY ,A.PRODUCT_DATE ,A.HANDBOOK_NO , A.SHIFT_TYPE , A.FUEL_TYPE ,A.VEHICLE_PURPOSE , A.BUSINESS_KIND ,");
		VmFunctionModules.append("A.BUSINESS_DATE , A.ENGINE_NO_OLD ,");
		VmFunctionModules.append("A.CHANGE_ENGINE_DESC ,A.SALES_AGENT_NAME ,( ");
		VmFunctionModules.append(
				"CASE WHEN CONSULTANT_PRIVATE = 1 THEN C.CONSULTANT  ELSE A.CONSULTANT END) AS CONSULTANT , ( ");
		VmFunctionModules.append(
				"CASE WHEN  IS_SELF_COMPANY_PRIVATE = 1  THEN C.IS_SELF_COMPANY ELSE A.IS_SELF_COMPANY END) AS IS_SELF_COMPANY , A.SALES_DATE , A.SALES_MILEAGE , A.VEHICLE_PRICE ,A.WRT_BEGIN_DATE , A.WRT_END_DATE ,  A.WRT_BEGIN_MILEAGE , A.WRT_END_MILEAGE ,A.LICENSE_DATE , A.MILEAGE , A.IS_CHANGE_ODOGRAPH , A.TOTAL_CHANGE_MILEAGE , A.CHANGE_DATE , A.ADD_EQUIPMENT , ( ");
		VmFunctionModules.append(
				"CASE WHEN FIRST_IN_DATE_PRIVATE = 1 THEN C.FIRST_IN_DATE   ELSE A.FIRST_IN_DATE END) AS FIRST_IN_DATE ,  A.NEXT_MAINTAIN_DATE , A.NEXT_MAINTAIN_MILEAGE ,A.DAILY_AVERAGE_MILEAGE ,  A.LAST_INSPECT_DATE , A.NEXT_INSPECT_DATE , A.DELIVERER , A.DELIVERER_GENDER , A.DELIVERER_PHONE , A.DELIVERER_MOBILE ,A.DELIVERER_HOBBY_CONTACT , A.DELIVERER_RELATION_TO_OWNER , A.DELIVERER_COMPANY ,A.DELIVERER_CREDIT , A.DELIVERER_ADDRESS , A.ZIP_CODE , ( ");
		VmFunctionModules.append(
				"CASE WHEN CHIEF_TECHNICIAN_PRIVATE = 1  THEN  C.CHIEF_TECHNICIAN   ELSE A.CHIEF_TECHNICIAN END) AS CHIEF_TECHNICIAN , ( ");
		VmFunctionModules.append(
				"CASE WHEN SERVICE_ADVISOR_PRIVATE = 1  THEN C.SERVICE_ADVISOR ELSE A.SERVICE_ADVISOR  END) AS SERVICE_ADVISOR ,( ");
		VmFunctionModules.append(
				"CASE WHEN INSURANCE_ADVISOR_PRIVATE = 1 THEN C.INSURANCE_ADVISOR ELSE A.INSURANCE_ADVISOR END) AS INSURANCE_ADVISOR , ( ");
		VmFunctionModules.append(
				"CASE WHEN MAINTAIN_ADVISOR_PRIVATE = 1  THEN C.MAINTAIN_ADVISOR  ELSE A.MAINTAIN_ADVISOR END) AS MAINTAIN_ADVISOR ,( ");
		VmFunctionModules.append(
				"CASE WHEN LAST_MAINTAIN_DATE_PRIVATE = 1  THEN C.LAST_MAINTAIN_DATE ELSE A.LAST_MAINTAIN_DATE END ) AS LAST_MAINTAIN_DATE , ( ");
		VmFunctionModules.append(
				"CASE WHEN LAST_MAINTAIN_MILEAGE_PRIVATE = 1 THEN C.LAST_MAINTAIN_MILEAGE ELSE A.LAST_MAINTAIN_MILEAGE END) AS LAST_MAINTAIN_MILEAGE , ( ");
		VmFunctionModules.append(
				"CASE WHEN LAST_MAINTENANCE_DATE_PRIVATE = 1 THEN C.LAST_MAINTENANCE_DATE ELSE A.LAST_MAINTENANCE_DATE END) AS LAST_MAINTENANCE_DATE , ( ");
		VmFunctionModules.append(
				"CASE WHEN LAST_MAINTENANCE_MILEAGE_PRIVATE = 1 THEN C.LAST_MAINTENANCE_MILEAGE ELSE A.LAST_MAINTENANCE_MILEAGE END) AS LAST_MAINTENANCE_MILEAGE , ( ");
		VmFunctionModules.append("CASE WHEN PRE_PAY_PRIVATE = 1 THEN C.PRE_PAY  ELSE A.PRE_PAY  END) AS PRE_PAY , ( ");
		VmFunctionModules.append(
				"CASE WHEN ARREARAGE_AMOUNT_PRIVATE = 1 THEN C.ARREARAGE_AMOUNT ELSE A.ARREARAGE_AMOUNT END) AS ARREARAGE_AMOUNT , A.PREPARE_JOB , A.CONTRACT_NO ,A.ATTENTION_INFO,A.VIP_NO , A.CONTRACT_DATE ,( ");
		VmFunctionModules.append(
				"CASE WHEN DISCOUNT_EXPIRE_DATE_PRIVATE = 1 THEN C.DISCOUNT_EXPIRE_DATE ELSE A.DISCOUNT_EXPIRE_DATE END) AS DISCOUNT_EXPIRE_DATE , ( ");
		VmFunctionModules.append(
				"CASE WHEN DISCOUNT_MODE_CODE_PRIVATE = 1 THEN C.DISCOUNT_MODE_CODE  ELSE A.DISCOUNT_MODE_CODE END) AS DISCOUNT_MODE_CODE ,A.CAPITAL_ASSERTS_MANAGE_NO , A.INSURATION_CODE , A.INSURANCE_BILL_NO , A.INSURANCE_TYPE , A.INSURANCE_AMOUNT , A.INSURANCE_BUY_DATE ,A.INSURANCE_BEGIN_DATE ,A.INSURANCE_END_DATE , A.INSURANCE_INTRO_MAN , A.KEY_NUMBER , A.BRAND_MODEL , ( ");
		VmFunctionModules.append(
				"CASE WHEN IS_SELF_COMPANY_INSURANCE_PRIVATE = 1 THEN C.IS_SELF_COMPANY_INSURANCE  ELSE A.IS_SELF_COMPANY_INSURANCE  END) AS IS_SELF_COMPANY_INSURANCE , A.IS_TRACE , A.TRACE_TIME ,( ");
		VmFunctionModules
				.append("CASE WHEN ADJUSTER_PRIVATE = 1  THEN C.ADJUSTER    ELSE A.ADJUSTER END) AS ADJUSTER , ( ");
		VmFunctionModules.append(
				"CASE WHEN ADJUST_DATE_PRIVATE = 1 THEN C.ADJUST_DATE ELSE A.ADJUST_DATE END) AS ADJUST_DATE , A.DOWN_TIMESTAMP , A.FOUND_DATE , A.REMARK , A.SUBMIT_TIME , A.SUBMIT_STATUS , A.EXCEPTION_CAUSE ,  A.IS_UPLOAD ,A.IS_UPLOAD_GROUP , A.RFID , A.MEMBER_NO ,   ( ");
		VmFunctionModules.append(
				"CASE WHEN IS_VALID_PRIVATE = 1 THEN C.IS_VALID ELSE A.IS_VALID END) AS IS_VALID , A.GEAR_TYPE ,A.OFFLINE_DATE , A.YEAR_MODEL , A.NEW_VEHICLE_MILEAGE , A.NEW_VEHICLE_DATE , A.PRODUCT_CODE , ( ");
		VmFunctionModules
				.append("CASE WHEN NO_VALID_REASON_PRIVATE = 1 THEN C.NO_VALID_REASON ELSE A.NO_VALID_REASON END) ");
		VmFunctionModules.append(
				"AS NO_VALID_REASON , A.CREATED_BY , A.CREATED_AT , A.UPDATED_BY ,A.UPDATED_AT , A.VER, A.PRODUCTING_AREA, A.DCRC_ADVISOR,A.VSN, A.DISCHARGE_STANDARD, ");
		VmFunctionModules.append(
				"A.SYSTEM_REMARK, A.SYSTEM_LAST_MAINTENANCE_DATE,A.SYSTEM_UPDATE_DATE, A.AVCHORED, A.UNIT_ATTACHCODE, A.CURRENT_MILEAGE, A.CURRENT_MILEAGE_DATE, A.WARRANTY_NUMBER, A.WAYS_TO_BUY, ");
		VmFunctionModules.append(
				"A.REPLACE_INTENT_MODEL,A.REPLACE_DATE, A.REBUY_INTENT_MODEL, A.REBUY_DATE,  A.IS_TRIPLE_GUARANTEE,  A.VER_TIME,A.INVOICE_NO,A.WAR_END_DATE, A.IS_BINDING, ");
		VmFunctionModules.append("A.BINDING_DATE, A.IS_OVERTIME,A.IS_ENTITY, A.WX_UNBUNDLING_DATE ");
		VmFunctionModules.append("FROM TM_VEHICLE A LEFT OUTER JOIN TM_ENTITY_RELATIONSHIP B ");
		VmFunctionModules.append(
				"ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TM_VEHICLE' LEFT OUTER JOIN TM_VEHICLE_SUBCLASS C ");
		VmFunctionModules.append("ON B.CHILD_ENTITY = C.DEALER_CODE AND A.OWNER_NO = C.OWNER_NO AND A.VIN=C.VIN ");
		VmFunctionModules.append("LEFT OUTER JOIN ( SELECT DEALER_CODE, SUM( ");
		VmFunctionModules.append("CASE WHEN PRIVATE_FIELD = 'CONSULTANT' AND IS_VALID = 12781001 THEN 1 ");
		VmFunctionModules.append("ELSE 0 END ) AS CONSULTANT_PRIVATE, SUM( ");
		VmFunctionModules.append("CASE WHEN PRIVATE_FIELD = 'IS_SELF_COMPANY' AND IS_VALID = 12781001 THEN 1 ");
		VmFunctionModules.append("ELSE 0 END ) AS IS_SELF_COMPANY_PRIVATE, SUM( ");
		VmFunctionModules.append("CASE WHEN PRIVATE_FIELD = 'FIRST_IN_DATE' AND IS_VALID = 12781001 THEN 1 ");
		VmFunctionModules.append("ELSE 0 END ) AS FIRST_IN_DATE_PRIVATE, SUM( ");
		VmFunctionModules.append("CASE WHEN PRIVATE_FIELD = 'CHIEF_TECHNICIAN' AND IS_VALID = 12781001 THEN 1 ");
		VmFunctionModules.append("ELSE 0 END ) AS CHIEF_TECHNICIAN_PRIVATE, SUM( ");
		VmFunctionModules.append("CASE WHEN PRIVATE_FIELD = 'SERVICE_ADVISOR' AND IS_VALID = 12781001 THEN 1 ");
		VmFunctionModules.append("ELSE 0 END) AS SERVICE_ADVISOR_PRIVATE, SUM( ");
		VmFunctionModules.append("CASE WHEN PRIVATE_FIELD = 'INSURANCE_ADVISOR' AND IS_VALID = 12781001 THEN 1 ");
		VmFunctionModules.append("ELSE 0 END) AS INSURANCE_ADVISOR_PRIVATE, SUM( ");
		VmFunctionModules.append("CASE WHEN PRIVATE_FIELD = 'MAINTAIN_ADVISOR' AND IS_VALID = 12781001 THEN 1 ");
		VmFunctionModules.append("ELSE 0 END) AS MAINTAIN_ADVISOR_PRIVATE, SUM( ");
		VmFunctionModules.append("CASE WHEN PRIVATE_FIELD = 'LAST_MAINTAIN_DATE' AND IS_VALID = 12781001 THEN 1 ");
		VmFunctionModules.append("ELSE 0 END) AS LAST_MAINTAIN_DATE_PRIVATE, SUM( ");
		VmFunctionModules.append("CASE WHEN PRIVATE_FIELD = 'LAST_MAINTAIN_MILEAGE' AND IS_VALID = 12781001 THEN 1 ");
		VmFunctionModules.append("ELSE 0 END) AS LAST_MAINTAIN_MILEAGE_PRIVATE, SUM( ");
		VmFunctionModules.append("CASE WHEN PRIVATE_FIELD = 'LAST_MAINTENANCE_DATE' AND IS_VALID = 12781001 THEN 1 ");
		VmFunctionModules.append("ELSE 0 END) AS LAST_MAINTENANCE_DATE_PRIVATE, SUM( ");
		VmFunctionModules
				.append("CASE WHEN PRIVATE_FIELD = 'LAST_MAINTENANCE_MILEAGE' AND IS_VALID = 12781001 THEN 1 ");
		VmFunctionModules.append("ELSE 0 END) AS LAST_MAINTENANCE_MILEAGE_PRIVATE, SUM( ");
		VmFunctionModules.append("CASE WHEN PRIVATE_FIELD = 'PRE_PAY' AND IS_VALID = 12781001 THEN 1 ");
		VmFunctionModules.append("ELSE 0 END) AS PRE_PAY_PRIVATE, SUM( ");
		VmFunctionModules.append("CASE WHEN PRIVATE_FIELD = 'ARREARAGE_AMOUNT' AND IS_VALID = 12781001 THEN 1 ");
		VmFunctionModules.append("ELSE 0 END) AS ARREARAGE_AMOUNT_PRIVATE, SUM( ");
		VmFunctionModules.append("CASE WHEN PRIVATE_FIELD = 'DISCOUNT_EXPIRE_DATE' AND IS_VALID = 12781001 THEN 1 ");
		VmFunctionModules.append("ELSE 0 END) AS DISCOUNT_EXPIRE_DATE_PRIVATE, SUM( ");
		VmFunctionModules.append("CASE WHEN PRIVATE_FIELD = 'DISCOUNT_MODE_CODE' AND IS_VALID = 12781001 THEN 1 ");
		VmFunctionModules.append("ELSE 0 END) AS DISCOUNT_MODE_CODE_PRIVATE, SUM( ");
		VmFunctionModules
				.append("CASE WHEN PRIVATE_FIELD = 'IS_SELF_COMPANY_INSURANCE' AND IS_VALID = 12781001 THEN 1 ");
		VmFunctionModules.append("ELSE 0 END) AS IS_SELF_COMPANY_INSURANCE_PRIVATE, SUM( ");
		VmFunctionModules.append("CASE WHEN PRIVATE_FIELD = 'ADJUSTER' AND IS_VALID = 12781001 THEN 1 ");
		VmFunctionModules.append("ELSE 0 END) AS ADJUSTER_PRIVATE, SUM( ");
		VmFunctionModules.append("CASE WHEN PRIVATE_FIELD = 'ADJUST_DATE' AND IS_VALID = 12781001 THEN 1 ");
		VmFunctionModules.append("ELSE 0 END) AS ADJUST_DATE_PRIVATE, SUM( ");
		VmFunctionModules.append("CASE WHEN PRIVATE_FIELD = 'IS_VALID' AND IS_VALID = 12781001 THEN 1 ");
		VmFunctionModules.append("ELSE 0 END) AS IS_VALID_PRIVATE, SUM( ");
		VmFunctionModules.append("CASE WHEN PRIVATE_FIELD = 'NO_VALID_REASON' AND IS_VALID = 12781001 THEN 1 ");
		VmFunctionModules.append("ELSE 0 END) AS NO_VALID_REASON_PRIVATE ");
		VmFunctionModules.append("FROM TM_ENTITY_PRIVATE_FIELD ");
		VmFunctionModules
				.append("WHERE TABLE_NAME = 'TM_VEHICLE' GROUP BY DEALER_CODE ) D ON D.DEALER_CODE = A.DEALER_CODE ");
		return VmFunctionModules.toString();
	}
	static String getVmMemberVehicle() {
		StringBuffer VmMemberVehicle = new StringBuffer();
		VmMemberVehicle.append("SELECT B.CHILD_ENTITY AS DEALER_CODE,A.LAST_UPDATE_DATE, A.VIN, A.ACCOUNT_ID, A.CARD_ID, A.ITEM_ID,A.VER,");
		VmMemberVehicle.append("  A.UPDATED_AT,A.UPDATED_BY,A.CREATED_AT, A.CREATED_BY, A.D_KEY FROM  TM_MEMBER_VEHICLE A INNER JOIN TM_ENTITY_RELATIONSHIP B ON ");
		VmMemberVehicle.append("  A.DEALER_CODE = B.PARENT_ENTITY  ");
		return VmMemberVehicle.toString();
	}
	static String getVmMemberCard() {
		StringBuffer VmMemberCard = new StringBuffer();
		VmMemberCard.append("SELECT B.CHILD_ENTITY AS DEALER_CODE,A.CARD_ID,A.MEMBER_NO,A.BAR_CODE,A.OPERATOR,A.CARD_FOUND_TIME,A.CARD_STATUS,");
		VmMemberCard.append(" A.IS_SPECIFIED_VEHICLE,A.CARD_START_DATE,A.CARD_END_DATE,A.D_KEY,A.UPDATED_AT,A.UPDATED_BY,A.CREATED_AT, A.CREATED_BY,");
		VmMemberCard.append(" A.VER,A.CARD_CODE,A.CARD_TYPE_CODE, A.GENDER, A.NAME_WITH_CARD,A.ZIP_CODE_WITH_CARD,A.CONTACTOR_MOBILE,");
		VmMemberCard.append(" A.CONTACTOR_PHONE,A.E_MAIL,A.STATUS_CHANGE_REASON, A.MAKE_UP_MAN,A.MAKE_UP_DATE, A.MAKE_UNABLE_MAN, A.MAKE_UNABLE_DATE, ");
		VmMemberCard.append(" A.CARD_FROM_ENTITY, A.REASON,A.ADDRESS,A.LAST_UPGRADE_DATE,A.IS_GROUP_BUY,A.DEALER_NAME,A.LAST_UPDATE_DATE,");
		VmMemberCard.append(" A.PASSWORD, A.HAS_PROVIDE_CARD,A.RECOMMEND_FOUND_MAN,A.REMARK ,A.BAR_NO FROM TM_MEMBER_CARD A ");
		VmMemberCard.append(" INNER JOIN TM_ENTITY_RELATIONSHIP B ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TM_MEMBER_CARD'");
		return VmMemberCard.toString();
	}
	static String getVmPartCustomer() {
		StringBuffer VmPartCustomer = new StringBuffer();
		VmPartCustomer.append(
				"SELECT B.CHILD_ENTITY AS DEALER_CODE ,  A.CUSTOMER_CODE , A.CUSTOMER_TYPE_CODE , A.CUSTOMER_NAME , A.CUSTOMER_SPELL , A.CUSTOMER_SHORT_NAME ,  A.ADDRESS ,");
		VmPartCustomer.append(
				" A.ZIP_CODE , A.CONTACTOR_NAME ,A.CONTACTOR_PHONE ,A.CONTACTOR_MOBILE , A.FAX , A.CONTRACT_NO ,A.AGREEMENT_BEGIN_DATE , A.AGREEMENT_END_DATE ,");
		VmPartCustomer.append(
				" A.PRICE_ADD_RATE , A.PRICE_RATE , A.SALES_BASE_PRICE_TYPE ,A.CREDIT_AMOUNT , A.TOTAL_ARREARAGE_AMOUNT , A.ACCOUNT_TERM ,");
		VmPartCustomer.append(
				"  A.TOTAL_ARREARAGE_TERM , (CASE WHEN PRE_PAY_PRIVATE = 1  THEN C.PRE_PAY  ELSE A.PRE_PAY  END) AS PRE_PAY , (");
		VmPartCustomer.append(
				"   CASE WHEN ARREARAGE_AMOUNT_PRIVATE = 1  THEN C.ARREARAGE_AMOUNT  ELSE A.ARREARAGE_AMOUNT END) AS ARREARAGE_AMOUNT ,");
		VmPartCustomer.append(
				"  A.ACCOUNT_AGE , A.OEM_TAG , A.CUS_RECEIVE_SORT , A.BAL_OBJ_CODE , A.BAL_OBJ_NAME ,A.LEAD_TIME, A.CREATED_BY , A.CREATED_AT , A.UPDATED_BY ,");
		VmPartCustomer
				.append("  A.UPDATED_AT , A.VER FROM TM_PART_CUSTOMER A LEFT OUTER JOIN TM_ENTITY_RELATIONSHIP B");
		VmPartCustomer.append(
				" ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TM_PART_CUSTOMER' LEFT OUTER JOIN TM_PART_CUSTOMER_SUBCLASS C");
		VmPartCustomer.append(
				" ON B.CHILD_ENTITY = C.DEALER_CODE AND A.CUSTOMER_CODE = C.CUSTOMER_CODE LEFT OUTER JOIN ( SELECT DEALER_CODE, SUM(");
		VmPartCustomer.append(
				"  CASE WHEN PRIVATE_FIELD = 'PRE_PAY'  AND IS_VALID = 12781001 THEN 1  ELSE 0  END) AS PRE_PAY_PRIVATE,");
		VmPartCustomer.append(
				"  SUM(  CASE WHEN PRIVATE_FIELD = 'ARREARAGE_AMOUNT' AND IS_VALID = 12781001 THEN 1  ELSE 0 END) AS ARREARAGE_AMOUNT_PRIVATE ");
		VmPartCustomer.append(
				"  FROM  TM_ENTITY_PRIVATE_FIELD WHERE  TABLE_NAME = 'TM_PART_CUSTOMER' GROUP BY  DEALER_CODE )");
		VmPartCustomer.append("  D ON D.DEALER_CODE = A.DEALER_CODE ");
		return VmPartCustomer.toString();
	}

	static String getVmOwner() {
		StringBuffer VmOwner = new StringBuffer();
		VmOwner.append(
				"SELECT  B.CHILD_ENTITY AS DEALER_CODE ,  A.OWNER_NO , A.OWNER_GROUP_NO , A.SUB_OWNER_NO , A.OWNER_PROPERTY ,A.OWNER_NAME ,  A.OWNER_SPELL ,");
		VmOwner.append(
				" A.GENDER , A.CT_CODE ,A.CERTIFICATE_NO ,A.TAX_NO ,A.PROVINCE , A.CITY ,A.DISTRICT , A.ADDRESS , A.ZIP_CODE , A.SECOND_ADDRESS ,");
		VmOwner.append(
				"A.INDUSTRY_FIRST , A.INDUSTRY_SECOND ,A.PHONE , A.MOBILE ,A.BIRTHDAY , A.E_MAIL , A.FAMILY_INCOME , A.OWNER_MARRIAGE ,");
		VmOwner.append(
				" A.EDU_LEVEL , A.HOBBY , A.DECISION_MARKER_NAME , A.DECISION_MARKER_GENDER , A.DECISION_MARKER_PHONE , A.DECISION_MARKER_MOBILE ,");
		VmOwner.append(
				" A.DECISION_MARKER_ADDRESS , A.DECISION_MARKER_POSITION , A.DECISION_MARKER_BIRTHDAY , A.DECISION_MARKER_E_MAIL , A.DECISION_MARKER_HOBBY , A.CONTACTOR_NAME ,");
		VmOwner.append(
				"A.CONTACTOR_GENDER , A.CONTACTOR_PHONE ,A.CONTACTOR_MOBILE ,A.CONTACTOR_PROVINCE ,A.CONTACTOR_CITY ,A.CONTACTOR_DISTRICT ,");
		VmOwner.append(
				" A.CONTACTOR_ADDRESS ,A.CONTACTOR_ZIP_CODE ,A.CONTACTOR_EMAIL , A.CONTACTOR_HOBBY_CONTACT ,A.CONTACTOR_VOCATION_TYPE ,");
		VmOwner.append(
				" A.CONTACTOR_POSITION , A.CONTACTOR_FAX , A.REMARK , A.OWNER_NO_OLD , A.DOWN_TIMESTAMP , A.FOUND_DATE , A.SUBMIT_TIME ,");
		VmOwner.append(
				" A.IS_UPLOAD , A.IS_UPLOAD_GROUP ,(CASE WHEN PRE_PAY_PRIVATE = 1 THEN C.PRE_PAY  ELSE A.PRE_PAY  END) AS PRE_PAY ,");
		VmOwner.append(
				" ( CASE  WHEN ARREARAGE_AMOUNT_PRIVATE = 1 THEN C.ARREARAGE_AMOUNT ELSE A.ARREARAGE_AMOUNT END) AS ARREARAGE_AMOUNT ,");
		VmOwner.append(
				" A.CUS_RECEIVE_SORT ,A.CUSTOMER_CODE, A.MEMBER_NO , A.CREATED_BY , A.CREATED_AT , A.UPDATED_BY , A.UPDATED_AT ,  A.VER ");
		VmOwner.append(
				"FROM TM_OWNER A LEFT OUTER JOIN TM_ENTITY_RELATIONSHIP B ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TM_OWNER'");
		VmOwner.append(
				" LEFT OUTER JOIN TM_OWNER_SUBCLASS C ON B.CHILD_ENTITY = C.DEALER_CODE AND A.OWNER_NO = C.OWNER_NO LEFT OUTER JOIN");
		VmOwner.append(
				" ( SELECT DEALER_CODE, SUM( CASE WHEN PRIVATE_FIELD = 'PRE_PAY'  AND IS_VALID = 12781001 THEN 1  ELSE 0 END) AS PRE_PAY_PRIVATE,");
		VmOwner.append(
				" SUM(CASE WHEN PRIVATE_FIELD = 'ARREARAGE_AMOUNT'  AND IS_VALID = 12781001   THEN 1   ELSE 0  END) AS ARREARAGE_AMOUNT_PRIVATE");
		VmOwner.append(
				"  FROM   TM_ENTITY_PRIVATE_FIELD  WHERE      TABLE_NAME = 'TM_OWNER' GROUP BY  DEALER_CODE ) D ON D.DEALER_CODE = A.DEALER_CODE");

		return VmOwner.toString();
	}

	static String getVmCustomerType() {
		StringBuffer VmCustomerType = new StringBuffer();
		VmCustomerType.append(
				"SELECT B.CHILD_ENTITY AS DEALER_CODE, A.CUSTOMER_TYPE_CODE, A.CUSTOMER_TYPE_NAME,A.CREATED_BY, A.CREATED_AT, A.UPDATED_BY,");
		VmCustomerType.append(
				" A.UPDATED_AT,  A.VER FROM TM_CUSTOMER_TYPE A INNER JOIN TM_ENTITY_RELATIONSHIP B ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TM_CUSTOMER_TYPE'");
		return VmCustomerType.toString();
	}

	static String getVmServiceInsurance() {
		StringBuffer VmServiceInsurance = new StringBuffer();
		VmServiceInsurance.append(
				"SELECT B.CHILD_ENTITY AS DEALER_CODE, A.ITEM_ID, A.PRODUCT_CODE, A.VIN,  A.INSURANCE_TYPE_CODE, A.INSURATION_CODE, A.INSURANCE_BEGIN_DATE, A.INSURANCE_END_DATE,");
		VmServiceInsurance.append(
				" A.INSURANCE_INTRO_MAN, A.INSURANCE_BILL_NO, A.RE_INSURE,A.ACTUAL_EXPENDING,  A.RECORDER, A.RECORD_DATE,A.COMPLETED_DATE, A.COMPLETED_BY, A.IS_INSURE_REMIND, A.INSURANCE_BUY_DATE,  A.IS_SELF_COMPANY_INSURANCE, ");
		VmServiceInsurance.append(
				" A.IS_SALE_CREATE,A.IS_VALID, A.REMARK,  A.OWNED_BY, A.D_KEY, A.CREATED_BY, A.CREATED_AT, A.UPDATED_BY, A.UPDATED_AT,  A.VER FROM TT_SERVICE_INSURANCE A ");
		VmServiceInsurance.append(
				" INNER JOIN TM_ENTITY_RELATIONSHIP B ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TT_SERVICE_INSURANCE' ");
		return VmServiceInsurance.toString();
	}

	static String getVmStorage() {
		StringBuffer VmCustomerType = new StringBuffer();
		VmCustomerType.append(
				"SELECT B.CHILD_ENTITY AS DEALER_CODE, A.STORAGE_CODE, A.STORAGE_NAME, A.LEAD_TIME, A.WORKSHOP_TAG, A.IS_NEGATIVE,");
		VmCustomerType.append(
				" A.OEM_TAG, A.GARNITURE_TAG, A.UPHOLSTER_TAG, A.CREATED_BY, A.CREATED_AT, A.UPDATED_BY, A.UPDATED_AT, A.VER,");
		VmCustomerType.append(
				" IS_GIFT, A.STORAGE_TYPE, A.CJ_TAG" + " FROM TM_STORAGE A INNER JOIN TM_ENTITY_RELATIONSHIP B");
		VmCustomerType.append(" ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TM_STORAGE'");
		return VmCustomerType.toString();
	}

	public static String getVmSalesServices() {
		StringBuffer VmSalesServices = new StringBuffer();
		VmSalesServices.append(
				"SELECT B.CHILD_ENTITY AS DEALER_CODE,A.SERVICE_ID AS SERVICE_ID ,A.SERVICE_CODE,A.SERVICE_NAME,A.SERVICE_TYPE,A.DIRECTIVE_PRICE,A.COST_PRICE,");
		VmSalesServices.append(" A.REMARK,A.CREATED_BY,A.UPDATED_BY,A.UPDATED_AT,A.CREATED_AT");
		VmSalesServices.append(" FROM TM_SALES_SERVICES A INNER JOIN TM_ENTITY_RELATIONSHIP B");
		VmSalesServices.append(" ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TM_SALES_SERVICES'");
		return VmSalesServices.toString();
	}
<<<<<<< .mine
	
	static String getVmRepairItem() {
		StringBuffer VmRepairItem = new StringBuffer();
		VmRepairItem.append("SELECT B.CHILD_ENTITY AS DEALER_CODE,A.LABOUR_CODE, A.MODEL_LABOUR_CODE, A.LABOUR_NAME,");
		VmRepairItem.append( " A.REPAIR_GROUP_CODE, A.LOCAL_LABOUR_CODE,  A.LOCAL_LABOUR_NAME, A.STD_LABOUR_HOUR, A.ASSIGN_LABOUR_HOUR, ");
		VmRepairItem.append( "A.OEM_LABOUR_HOUR,  A.OPERATION_CODE, A.WORKER_TYPE_CODE, A.SPELL_CODE,  A.REPAIR_TYPE_CODE, A.CLAIM_LABOUR, ");
		VmRepairItem.append( "A.DOWN_TAG, A.CREATED_BY, A.CREATED_AT, A.UPDATED_BY,A.UPDATED_AT, A.VER, A.IS_MEMBER,   REPLACE_STATUS, ");
		VmRepairItem.append( "C.INFIX_CODE, C.LABOUR_TYPE, A.MAIN_GROUP_CODE, A.SUB_GROUP_CODE, A.MODEL_YEAR  FROM TM_REPAIR_ITEM A ");
		VmRepairItem.append( "LEFT JOIN TM_REPAIR_ITEM_MAIN C ON C.DEALER_CODE = A.DEALER_CODE AND C.LABOUR_CODE = A.LABOUR_CODE  ");
		VmRepairItem.append( "INNER JOIN TM_ENTITY_RELATIONSHIP B ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TM_REPAIR_ITEM'");

		return VmRepairItem.toString();
	}
	
	public static String getVmPartInfo() {
        StringBuffer VmSalesServices = new StringBuffer();
        VmSalesServices.append("SELECT B.CHILD_ENTITY AS DEALER_CODE,A.PART_NO,A.PART_NAME,A.PART_NAME_EN,A.SPELL_CODE,A.PART_GROUP_CODE,A.UNIT_NAME,A.UNIT_CODE,A.OPTION_RELATION,A.OPTION_NO,");
        VmSalesServices.append(" A.BRAND,A.SERIES,A.PART_MODEL_GROUP_CODE_SET,A.QUANTITY_PER_CAR,A.NODE_PRICE,A.PLAN_PRICE,A.CLAIM_PRICE,A.LIMIT_PRICE,A.OEM_LIMIT_PRICE,A.REGULAR_PRICE,A.URGENT_PRICE,");
        VmSalesServices.append(" A.INSTRUCT_PRICE,A.INSURANCE_PRICE,A.REMARK,A.MAX_STOCK,A.MIN_STOCK,A.LEAD_TIME,A.PROVIDER_CODE,A.PROVIDER_NAME,A.PART_STATUS,A.IS_UNSAFE,A.MIN_PACKAGE,A.ORDER_TYPE,");
        VmSalesServices.append(" A.PRODUCTING_AREA,A.MAIN_ORDER_TYPE,A.PART_PRODUCT_CODE,A.PART_MAIN_TYPE,A.FROM_ENTITY,A.IS_FREEZE,A.DOWN_TAG,A.ORI_PRO_CODE,A.ABC_TYPE,A.IS_THINGS,A.IS_OIL,");
        VmSalesServices.append(" A.IS_SPECIAL,A.BASE_WARP,A.APPLY_YEAR,A.IS_CAL_BASE,A.BO_FLAG,A.IS_ACC,A.BIG_CATEGORY_CODE,A.SUB_CATEGORY_CODE,A.THD_CATEGORY_CODE,A.SAFE_STOCK,A.IS_STORAGE_SALE,A.OEM_TAG,");
        VmSalesServices.append(" A.QAN_RULES,A.SUBMIT_TIME,A.ACC_MODE,A.MIN_LIMIT_PRICE,A.D_KEY,A.CREATED_BY,A.CREATED_AT,A.UPDATED_BY,A.UPDATED_AT,A.VER,a.part_type,a.is_back,a.sale_code,");
        VmSalesServices.append(" a.is_exempt_c,a.PART_INFIX,a.PART_INFIX_NAME,a.GOODS_BRANDS,a.OEM_NO,a.MAINTAIN_PRICE,A.LIMIT_NO FROM TM_PART_INFO A INNER JOIN");
        VmSalesServices.append(" TM_ENTITY_RELATIONSHIP B ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TM_PART_INFO'");
        return VmSalesServices.toString();
    }
=======
	
	public static String getVmPartInfo() {
        StringBuffer VmSalesServices = new StringBuffer();
        VmSalesServices.append("SELECT B.CHILD_ENTITY AS DEALER_CODE,A.PART_NO,A.PART_NAME,A.PART_NAME_EN,A.SPELL_CODE,A.PART_GROUP_CODE,A.UNIT_NAME,A.UNIT_CODE,A.OPTION_RELATION,A.OPTION_NO,");
        VmSalesServices.append(" A.BRAND,A.SERIES,A.PART_MODEL_GROUP_CODE_SET,A.QUANTITY_PER_CAR,A.NODE_PRICE,A.PLAN_PRICE,A.CLAIM_PRICE,A.LIMIT_PRICE,A.OEM_LIMIT_PRICE,A.REGULAR_PRICE,A.URGENT_PRICE,");
        VmSalesServices.append(" A.INSTRUCT_PRICE,A.INSURANCE_PRICE,A.REMARK,A.MAX_STOCK,A.MIN_STOCK,A.LEAD_TIME,A.PROVIDER_CODE,A.PROVIDER_NAME,A.PART_STATUS,A.IS_UNSAFE,A.MIN_PACKAGE,A.ORDER_TYPE,");
        VmSalesServices.append(" A.PRODUCTING_AREA,A.MAIN_ORDER_TYPE,A.PART_PRODUCT_CODE,A.PART_MAIN_TYPE,A.FROM_ENTITY,A.IS_FREEZE,A.DOWN_TAG,A.ORI_PRO_CODE,A.ABC_TYPE,A.IS_THINGS,A.IS_OIL,");
        VmSalesServices.append(" A.IS_SPECIAL,A.BASE_WARP,A.APPLY_YEAR,A.IS_CAL_BASE,A.BO_FLAG,A.IS_ACC,A.BIG_CATEGORY_CODE,A.SUB_CATEGORY_CODE,A.THD_CATEGORY_CODE,A.SAFE_STOCK,A.IS_STORAGE_SALE,A.OEM_TAG,");
        VmSalesServices.append(" A.QAN_RULES,A.SUBMIT_TIME,A.ACC_MODE,A.MIN_LIMIT_PRICE,A.D_KEY,A.CREATED_BY,A.CREATED_AT,A.UPDATED_BY,A.UPDATED_AT,A.VER,a.part_type,a.is_back,a.sale_code,");
        VmSalesServices.append(" a.is_exempt_c,a.PART_INFIX,a.PART_INFIX_NAME,a.GOODS_BRANDS,a.OEM_NO,a.MAINTAIN_PRICE,A.LIMIT_NO FROM TM_PART_INFO A INNER JOIN");
        VmSalesServices.append(" TM_ENTITY_RELATIONSHIP B ON A.DEALER_CODE = B.PARENT_ENTITY AND B.BIZ_CODE = 'TM_PART_INFO'");
        return VmSalesServices.toString();
    }
>>>>>>> .r11924

}